apiVersion: template.openshift.io/v1
kind: Template
labels:
  createdBy: parksmap-template
metadata:
  annotations:
    description: Application template for Parksmap application web, frontend and backend
      components
    iconClass: icon-eap
    openshift.io/display-name: Parksmap
    openshift.io/long-description: This template deploys a ParksMap application. Parksmap
      is a polyglot geo-spatial data visualization application built using the microservices
      architecture and is composed of a set of services which are developed using
      different programming languages and frameworks.
    openshift.io/provider-display-name: OpenShift evangelist team
    tags: roadshow,java,springboot,openshift
  creationTimestamp: "2023-08-16T12:03:22Z"
  name: parksmap
  namespace: openshift
  resourceVersion: "44949"
  uid: f5eac7aa-8781-41b5-bfae-9cd8ac2ad227
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      app.openshift.io/connects-to: ${MONGODB_MLB_APPLICATION_NAME}
      app.openshift.io/vcs-ref: master
      app.openshift.io/vcs-uri: https://github.com/openshift-roadshow/mlbparks.git
    labels:
      app: workshop
      app.kubernetes.io/name: eap
      app.kubernetes.io/part-of: workshop
      app.openshift.io/runtime: eap
      component: ${MLB_APPLICATION_NAME}
      role: backend
    name: ${MLB_APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      app: workshop
      component: ${MLB_APPLICATION_NAME}
      deploymentConfig: ${MLB_APPLICATION_NAME}
      role: database
    strategy:
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: workshop
          component: ${MLB_APPLICATION_NAME}
          deploymentConfig: ${MLB_APPLICATION_NAME}
          role: database
      spec:
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: OPENSHIFT_KUBE_PING_LABELS
            value: component=${MLB_APPLICATION_NAME}
          - name: OPENSHIFT_KUBE_PING_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: DB_PORT
            value: "27017"
          - name: DB_HOST
            value: ${MONGODB_MLB_APPLICATION_NAME}
          - name: DB_USERNAME
            value: mongodb
          - name: DB_PASSWORD
            value: mongodb
          - name: DB_NAME
            value: mongodb
          image: quay.io/erkanercan/mlbparks:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: ${MLB_APPLICATION_NAME}
          ports:
          - containerPort: 8787
            name: debug
            protocol: TCP
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8888
            name: ping
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name":"${MONGODB_MLB_APPLICATION_NAME}","namespace":"","kind":"Service"}]'
    labels:
      app: workshop
      component: ${MLB_APPLICATION_NAME}
      role: backend
      type: parksmap-backend
    name: ${MLB_APPLICATION_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8787-tcp
      port: 8787
      protocol: TCP
      targetPort: 8787
    selector:
      deploymentConfig: ${MLB_APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: workshop
      component: ${MLB_APPLICATION_NAME}
      role: backend
      type: parksmap-backend
    name: ${MLB_APPLICATION_NAME}
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: ${MLB_APPLICATION_NAME}
      weight: 100
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      app.openshift.io/connects-to: ${MONGODB_NP_APPLICATION_NAME}
      app.openshift.io/vcs-ref: master
      app.openshift.io/vcs-uri: https://github.com/openshift-roadshow/nationalparks.git
    labels:
      app: workshop
      app.kubernetes.io/part-of: workshop
      app.openshift.io/runtime: spring-boot
      component: ${NP_APPLICATION_NAME}
      role: backend
    name: ${NP_APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      app: workshop
      component: ${NP_APPLICATION_NAME}
      deploymentConfig: ${NP_APPLICATION_NAME}
      role: database
    strategy:
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: workshop
          component: ${NP_APPLICATION_NAME}
          deploymentConfig: ${NP_APPLICATION_NAME}
          role: database
      spec:
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: OPENSHIFT_KUBE_PING_LABELS
            value: component=${NP_APPLICATION_NAME}
          - name: OPENSHIFT_KUBE_PING_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MONGODB_SERVER_PORT
            value: "27017"
          - name: MONGODB_SERVER_HOST
            value: ${MONGODB_NP_APPLICATION_NAME}
          - name: MONGODB_USER
            value: mongodb
          - name: MONGODB_PASSWORD
            value: mongodb
          - name: MONGODB_DATABASE
            value: mongodb
          image: quay.io/erkanercan/nationalparks:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: ${NP_APPLICATION_NAME}
          ports:
          - containerPort: 8787
            name: debug
            protocol: TCP
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8888
            name: ping
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name":"${MONGODB_NP_APPLICATION_NAME}","namespace":"","kind":"Service"}]'
    labels:
      app: workshop
      component: ${NP_APPLICATION_NAME}
      role: backend
      type: parksmap-backend
    name: ${NP_APPLICATION_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8787-tcp
      port: 8787
      protocol: TCP
      targetPort: 8787
    selector:
      deploymentConfig: ${NP_APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: workshop
      component: ${NP_APPLICATION_NAME}
      role: backend
      type: parksmap-backend
    name: ${NP_APPLICATION_NAME}
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: ${NP_APPLICATION_NAME}
      weight: 100
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      app.openshift.io/connects-to: ${MLB_APPLICATION_NAME}, ${NP_APPLICATION_NAME}
    labels:
      app: workshop
      app.kubernetes.io/part-of: workshop
      app.openshift.io/component: ${PM_APPLICATION_NAME}
      app.openshift.io/runtime: spring-boot
      component: ${PM_APPLICATION_NAME}
      deploymentConfig: ${PM_APPLICATION_NAME}
      role: frontend
    name: ${PM_APPLICATION_NAME}
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: workshop
        component: ${PM_APPLICATION_NAME}
        role: frontend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        labels:
          app: workshop
          component: ${PM_APPLICATION_NAME}
          role: frontend
      spec:
        containers:
        - image: quay.io/openshiftroadshow/parksmap:latest
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: ${PM_APPLICATION_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: workshop
      app.kubernetes.io/part-of: workshop
      app.openshift.io/component: ${PM_APPLICATION_NAME}
      component: ${PM_APPLICATION_NAME}
      role: frontend
    name: ${PM_APPLICATION_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8787-tcp
      port: 8787
      protocol: TCP
      targetPort: 8787
    selector:
      component: ${PM_APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: workshop
      app.kubernetes.io/part-of: workshop
      app.openshift.io/component: ${PM_APPLICATION_NAME}
      component: ${PM_APPLICATION_NAME}
      role: frontend
    name: ${PM_APPLICATION_NAME}
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: ${PM_APPLICATION_NAME}
      weight: 100
parameters:
- description: The name for the parksmap web application.
  displayName: Parksmap Web Application Name
  name: PM_APPLICATION_NAME
  required: true
  value: parksmap
- description: The name for the mlbparks application.
  displayName: Mlbparks Application Name
  name: MLB_APPLICATION_NAME
  required: true
  value: mlbparks
- description: The name for the Mlbparks mongodb application.
  displayName: Mlbparks MongoDB Application Name
  name: MONGODB_MLB_APPLICATION_NAME
  required: true
  value: mongodb-mlbparks
- description: The name for the nationalparks application.
  displayName: Nationalparks Application Name
  name: NP_APPLICATION_NAME
  required: true
  value: nationalparks
- description: The name for the nationalparks mongodb application.
  displayName: Nationalparks MongoDB Application Name
  name: MONGODB_NP_APPLICATION_NAME
  required: true
  value: mongodb-nationalparks
