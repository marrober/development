schemaVersion: 2.2.0
metadata:
  name: pacman
projects:
  - name: development
    git:
      remotes:
        origin: 'https://github.com/marrober/development.git'
      checkoutFrom:
        revision: main
    clonePath: development
  - name: pacman
    git:
      remotes:
        origin: https://github.com/marrober/pacman.git
    clonePath: pacman
  - name: my-quarkus-app
    git:
      remotes:
        origin: https://gitlab-gitlab.apps.cluster-qjkct.qjkct.sandbox1677.opentlc.com/development/my-quarkus-app.git
    clonePath: my-quarkus-app
components:
  - name: development-tooling
    container:
      image: quay.io/devfile/universal-developer-image:ubi9-latest
      env:
        - name: QUARKUS_HTTP_HOST
          value: 0.0.0.0
        - name: MAVEN_OPTS
          value: '-Dmaven.repo.local=/home/user/.m2/repository'
        - name: CHE_PLUGIN_REGISTRY_URL
          value: https://open-vsx.org
      memoryLimit: 5Gi
      cpuLimit: 2500m
      volumeMounts:
        - name: m2
          path: /home/user/.m2
      endpoints:
        - name: quarkus-dev
          targetPort: 8080
          exposure: public
          secure: false
          protocol: https
          path: hello
        - name: debug
          targetPort: 5005
          exposure: none
          secure: false
          protocol: tcp
        - name: tests
          targetPort: 8081
          exposure: none
          secure: false
          protocol: tcp
  - name: m2
    volume:
      size: 1G
commands:
  - id: package
    exec:
      label: 1. (QKS) Package the application
      component: development-tooling
      commandLine: ./mvnw package
      workingDir: ${PROJECTS_ROOT}/my-quarkus-app
      group:
        kind: build
        isDefault: true
  - id: start-dev
    exec:
      label: 2. (QKS) Start Development mode (Hot reload + debug)
      component: development-tooling
      commandLine: ./mvnw compile quarkus:dev
      workingDir: ${PROJECTS_ROOT}/my-quarkus-app
      group:
        kind: run
        isDefault: true
  - id: npm-dependencies
    exec:
      label: 3. (NJS) Download dependencies
      component: tools
      workingDir: ${PROJECTS_ROOT}/pacman/src
      commandLine: npm install
      group:
        kind: build
  - id: run-nodejs
    exec:
      label: 4. (NJS) Run the web app
      component: tools
      workingDir: ${PROJECTS_ROOT}/pacman/src
      commandLine: nodemon app.js
      group:
        kind: run
  - id: install-and-run-nodejs
    exec:
      label: 5. (NJS) Run the web app (and download dependencies)
      component: tools
      workingDir: ${PROJECTS_ROOT}/pacman/src
      commandLine: npm install; nodemon app.js
      group:
        kind: run
  - id: debug-njs
    exec:
      label: 6. (NJS) Run the web app (debugging enabled)
      component: tools
      workingDir: ${PROJECTS_ROOT}/pacman/src
      commandLine: nodemon --inspect app.js
      group:
        kind: debug
        isDefault: true
  - id: stopapp-njs
    exec:
      label: 7. (NJS) Stop the web app
      component: tools
      commandLine: 'node_server_pids=$(pgrep -fx ''.*nodemon (--inspect )?app.js'' | tr "\\n" " ") && echo "Stopping node server with PIDs: ${node_server_pids}" &&  kill -15 ${node_server_pids} &>/dev/null && echo ''Done.'''
      group:
        kind: run



#schemaVersion: 2.2.2
#metadata:
#  name: pacman
#projects:
#  - name: pacman
#    git:
#      remotes:
#        origin: 'https://github.com/marrober/pacman.git'
#      checkoutFrom:
#        revision: main
#components:
#  - name: tools
#    container:
#      image: registry.redhat.io/devspaces/udi-rhel8@sha256:d147892c643a0127cfcf868daee0ff416a8df922fe2a7c716ebfc457ff526fa2
#      endpoints:
#        - exposure: public
#          name: nodejs
#          protocol: https
#          targetPort: 3000
#      memoryLimit: 1Gi
#      memoryRequest: 600Mi
#      cpuLimit: '0.5'
#      cpuRequest: '0.25'
#      mountSources: true
#      volumeMounts:
#        - name: npm
#          path: /home/user/.npm
#  - name: npm
#    volume:
#      size: 1G
#commands:
#  - id: 1-dependencies
#    exec:
#      label: Download dependencies
#      component: tools
#      workingDir: ${PROJECTS_ROOT}/pacman/src
#      commandLine: npm install
#      group:
#        kind: build
#  - id: 2-run
#    exec:
#      label: Run the web app
#      component: tools
#      workingDir: ${PROJECTS_ROOT}/pacman/src
#      commandLine: nodemon app.js
#      group:
#        kind: run
#  - id: 3-install-and-run
#    exec:
#      label: Run the web app (and download dependencies)
#      component: tools
#      workingDir: ${PROJECTS_ROOT}/pacman/src
#      commandLine: npm install; nodemon app.js
#      group:
#        kind: run
#  - id: 4-debug
#    exec:
#      label: Run the web app (debugging enabled)
#      component: tools
#      workingDir: ${PROJECTS_ROOT}/pacman/src
#      commandLine: nodemon --inspect app.js
#      group:
#        kind: debug
#        isDefault: true
#  - id: 5-stopapp
#    exec:
#      label: Stop the web app
#      component: tools
#      commandLine: 'node_server_pids=$(pgrep -fx ''.*nodemon (--inspect )?app.js'' | tr "\\n" " ") && echo "Stopping node server with PIDs: ${node_server_pids}" &&  kill -15 ${node_server_pids} &>/dev/null && echo ''Done.'''
#      group:
#        kind: run

# https://github.com/marrober/development.git?devfilePath=/openshift/odo/devfile.yaml
